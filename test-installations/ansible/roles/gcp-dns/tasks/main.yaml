# Copyright (c) 2022 Gitpod GmbH. All rights reserved.
# Licensed under the GNU Affero General Public License (AGPL).
# See License-AGPL.txt in the project root for license information.

---

- debug:
    msg: "Cluster IP: {{ hostvars.localhost.cluster_ip }} â€“ Cluster internal IP: {{ hostvars.localhost.cluster_internal_ip }}"

- name: "Create resource record sets"
  google.cloud.gcp_dns_resource_record_set:
    name: "{{ item }}"
    managed_zone:
      name: "{{ gcp_dns_domain_zone_name }}"
      dnsName: "{{ gcp_dns_domain_zone_dnsname }}"
    type: A
    ttl: 300
    target:
    - "{{ hostvars.localhost.cluster_ip }}"
    project: "{{ gcp_dns_project }}"
    auth_kind: serviceaccount
    service_account_contents: "{{ gcp_dns_cred_content }}"
    state: present
  with_items:
  - "{{ gitpod_domain }}."
  - "*.{{ gitpod_domain }}."
  - "*.ws.{{ gitpod_domain }}."
  delegate_to: localhost
  run_once: true

# This is needed for air-gap installations.
- name: Create a private DNS managed zone
  google.cloud.gcp_dns_managed_zone:
    name: "{{ gcp_dns_domain_zone_name }}"
    dns_name: "{{ gcp_dns_domain_zone_dnsname }}"
    description: "DNS with internal IP addresses (mainly for air-gap installations)"
    project: "{{ gcp_project }}"
    auth_kind: serviceaccount
    service_account_contents: "{{ gcp_cred_content }}"
    visibility: private
    state: present

# This is needed for air-gap installations.
- name: Create resource record sets (private zone)
  google.cloud.gcp_dns_resource_record_set:
    name: "{{ item }}"
    managed_zone:
      name: "{{ gcp_dns_domain_zone_name }}"
      dnsName: "{{ gcp_dns_domain_zone_dnsname }}"
    type: A
    ttl: 300
    target:
    - "{{ hostvars.localhost.cluster_internal_ip }}"
    project: "{{ gcp_project }}"
    auth_kind: serviceaccount
    service_account_contents: "{{ gcp_dns_cred_content }}"
    state: present
  with_items:
  - "{{ gitpod_domain }}."
  - "*.{{ gitpod_domain }}."
  - "*.ws.{{ gitpod_domain }}."
  ignore_errors: true  # TODO: Create private zone when not exist
  delegate_to: localhost
  run_once: true

# - name: Create service account for DNS solver
#   google.cloud.gcp_iam_service_account:
#     name: "dns01-solver@{{ gcp_dns_project }}.iam.gserviceaccount.com"
#     display_name: Cert Manager DNS01 Solver
#     project: "{{ gcp_dns_project }}"
#     auth_kind: serviceaccount
#     service_account_contents: "{{ gcp_dns_cred_content }}"
#     state: present
#   register: dns_solver_serviceaccount
#   delegate_to: localhost
#   run_once: true

# - name: Create key for DNS resolver service account
#   google.cloud.gcp_iam_service_account_key:
#     service_account: "{{ dns_solver_serviceaccount }}"
#     private_key_type: TYPE_GOOGLE_CREDENTIALS_FILE
#     #path: /tmp/x.json
#     project: "{{ gcp_dns_project }}"
#     auth_kind: serviceaccount
#     service_account_contents: "{{ gcp_dns_cred_content }}"
#     state: present
#   register: dns_solver_serviceaccount_key
#   delegate_to: localhost
#   run_once: true

# - debug:
#     var: dns_solver_serviceaccount_key

- name: Create directories
  file:
    path: "{{ item }}"
    state: directory
    mode: 0777
  become: true
  loop:
    - /gitpod
    - /gitpod/manifests

- name: Copy Cert Manager DNS01 solver secret
  template:
    src: cert-manager-dns01-solver-secret.yaml
    dest: /gitpod/manifests/cert-manager-dns01-solver-secret.yaml

- name: Copy Cert Manager certificate Google CloudDNS
  template:
    src: cert-manager-certificate--google-clouddns.yaml
    dest: /gitpod/manifests/cert-manager-certificate.yaml
